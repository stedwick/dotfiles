window dev

0

dir ~/dev/resume-app

0 run clear && git status && git branch && git tag

window serv

1
2
2
2
2
0

dir ~/dev/resume-app
0 foc

1 run clear && echo browser-sync start --proxy 'philipbrocoum.kube' --files 'app'
2 run clear && echo kubectl logs -f deployment/app -n resume
0 run clear && git status && git branch && git tag

window web

0

dir ~/dev/resume-web

0 run clear && git status && git branch && git tag

window db

0

dir ~/dev/resume-db

0 run clear && git status && git branch && git tag

window lb

0

dir ~/dev/default-lb

0 run clear && git status && git branch && git tag

window .files

0

dir ~/Dropbox/Dotfiles

0 run clear && git status && git branch && git tag

window k8s-dev

0

dir ~/dev/k8s

0 run clear && git status && git branch && git tag

window k8s

0A
0A
0A
1A
1B
1B
22
22

dir ~/dev
2 foc

0 run exec watch -n 10 -t 'k8s-svc.sh'
1 run exec watch -n 10 -t 'kubectl get deploy --all-namespaces | ack -v kube | column -t'
A run exec watch -n 10 -t 'kubectl get po --all-namespaces | ack -v kube | column -t'
B run exec watch -n 10 -t 'k8s-pvc.sh'

2 run clear && ls

window docker

00000
00000
111BC
111BC
111BC
111BC
DDDDD

D foc

0 run exec watch --interval 10 --no-title 'docker ps --all --format "table {{.Names}}\t{{.Image}}\t{{.Status}}\t{{.Ports}}\t{{.Networks}}" | sort_with_header.sh'
1 run exec watch -n 10 -t 'docker image ls --format "table {{.Repository}}\t{{.Tag}}\t{{.Size}}" | ack --invert-match "k8s|kube|pause|etcd" | sort_with_header.sh'
B run exec watch -n 10 -t 'docker volume ls --format "table {{.Name}}" | sort_with_header.sh'
C run exec watch -n 10 -t 'docker network ls --format "table {{.Name}}" | ack --invert-match "bridge|host|none" | sort_with_header.sh'
D run exec watch -n 120 -t 'docker-machine ls'
